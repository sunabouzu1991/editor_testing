var SPE={distributions:{BOX:1,SPHERE:2,DISC:3,LINE:4},valueOverLifetimeLength:4};"function"==typeof define&&define.amd?define("spe",SPE):"undefined"!=typeof exports&&"undefined"!=typeof module&&(module.exports=SPE),SPE.TypedArrayHelper=function(t,e,r,i){"use strict";this.componentSize=r||1,this.size=e||1,this.TypedArrayConstructor=t||Float32Array,this.array=new t(e*this.componentSize),this.indexOffset=i||0},SPE.TypedArrayHelper.constructor=SPE.TypedArrayHelper,SPE.TypedArrayHelper.prototype.setSize=function(t,e){"use strict";var r=this.array.length;return e||(t*=this.componentSize),t<r?this.shrink(t):t>r?this.grow(t):void console.info("TypedArray is already of size:",t+".","Will not resize.")},SPE.TypedArrayHelper.prototype.shrink=function(t){"use strict";return this.array=this.array.subarray(0,t),this.size=t,this},SPE.TypedArrayHelper.prototype.grow=function(t){"use strict";var e=this.array,r=new this.TypedArrayConstructor(t);return r.set(e),this.array=r,this.size=t,this},SPE.TypedArrayHelper.prototype.splice=function(t,e){"use strict";t*=this.componentSize,e*=this.componentSize;for(var r=[],i=this.array,a=i.length,s=0;s<a;++s)(s<t||s>=e)&&r.push(i[s]);return this.setFromArray(0,r),this},SPE.TypedArrayHelper.prototype.setFromArray=function(t,e){"use strict";var r=t+e.length;return r>this.array.length?this.grow(r):r<this.array.length&&this.shrink(r),this.array.set(e,this.indexOffset+t),this},SPE.TypedArrayHelper.prototype.setVec2=function(t,e){"use strict";return this.setVec2Components(t,e.x,e.y)},SPE.TypedArrayHelper.prototype.setVec2Components=function(t,e,r){"use strict";var i=this.array,a=this.indexOffset+t*this.componentSize;return i[a]=e,i[a+1]=r,this},SPE.TypedArrayHelper.prototype.setVec3=function(t,e){"use strict";return this.setVec3Components(t,e.x,e.y,e.z)},SPE.TypedArrayHelper.prototype.setVec3Components=function(t,e,r,i){"use strict";var a=this.array,s=this.indexOffset+t*this.componentSize;return a[s]=e,a[s+1]=r,a[s+2]=i,this},SPE.TypedArrayHelper.prototype.setVec4=function(t,e){"use strict";return this.setVec4Components(t,e.x,e.y,e.z,e.w)},SPE.TypedArrayHelper.prototype.setVec4Components=function(t,e,r,i,a){"use strict";var s=this.array,o=this.indexOffset+t*this.componentSize;return s[o]=e,s[o+1]=r,s[o+2]=i,s[o+3]=a,this},SPE.TypedArrayHelper.prototype.setMat3=function(t,e){"use strict";return this.setFromArray(this.indexOffset+t*this.componentSize,e.elements)},SPE.TypedArrayHelper.prototype.setMat4=function(t,e){"use strict";return this.setFromArray(this.indexOffset+t*this.componentSize,e.elements)},SPE.TypedArrayHelper.prototype.setColor=function(t,e){"use strict";return this.setVec3Components(t,e.r,e.g,e.b)},SPE.TypedArrayHelper.prototype.setNumber=function(t,e){"use strict";return this.array[this.indexOffset+t*this.componentSize]=e,this},SPE.TypedArrayHelper.prototype.getValueAtIndex=function(t){"use strict";return this.array[this.indexOffset+t]},SPE.TypedArrayHelper.prototype.getComponentValueAtIndex=function(t){"use strict";return this.array.subarray(this.indexOffset+t*this.componentSize)},SPE.ShaderAttribute=function(t,e,r){"use strict";var i=SPE.ShaderAttribute.typeSizeMap;this.type="string"==typeof t&&i.hasOwnProperty(t)?t:"f",this.componentSize=i[this.type],this.arrayType=r||Float32Array,this.typedArray=null,this.bufferAttribute=null,this.dynamicBuffer=!!e,this.updateMin=0,this.updateMax=0},SPE.ShaderAttribute.constructor=SPE.ShaderAttribute,SPE.ShaderAttribute.typeSizeMap={f:1,v2:2,v3:3,v4:4,c:3,m3:9,m4:16},SPE.ShaderAttribute.prototype.setUpdateRange=function(t,e){"use strict";this.updateMin=Math.min(t*this.componentSize,this.updateMin*this.componentSize),this.updateMax=Math.max(e*this.componentSize,this.updateMax*this.componentSize)},SPE.ShaderAttribute.prototype.flagUpdate=function(){"use strict";var t=this.bufferAttribute,e=t.updateRange;e.offset=this.updateMin,e.count=Math.min(this.updateMax-this.updateMin+this.componentSize,this.typedArray.array.length),t.needsUpdate=!0},SPE.ShaderAttribute.prototype.resetUpdateRange=function(){"use strict";this.updateMin=0,this.updateMax=0},SPE.ShaderAttribute.prototype.resetDynamic=function(){"use strict";this.bufferAttribute.usage=this.dynamicBuffer?THREE.DynamicDrawUsage:THREE.StaticDrawUsage},SPE.ShaderAttribute.prototype.splice=function(t,e){"use strict";this.typedArray.splice(t,e),this.forceUpdateAll()},SPE.ShaderAttribute.prototype.forceUpdateAll=function(){"use strict";this.bufferAttribute.array=this.typedArray.array,this.bufferAttribute.updateRange.offset=0,this.bufferAttribute.updateRange.count=-1,this.bufferAttribute.usage=THREE.StaticDrawUsage,this.bufferAttribute.needsUpdate=!0},SPE.ShaderAttribute.prototype._ensureTypedArray=function(t){"use strict";null!==this.typedArray&&this.typedArray.size===t*this.componentSize||(null!==this.typedArray&&this.typedArray.size!==t?this.typedArray.setSize(t):null===this.typedArray&&(this.typedArray=new SPE.TypedArrayHelper(this.arrayType,t,this.componentSize)))},SPE.ShaderAttribute.prototype._createBufferAttribute=function(t){"use strict";if(this._ensureTypedArray(t),null!==this.bufferAttribute)return this.bufferAttribute.array=this.typedArray.array,parseFloat(THREE.REVISION)>=81&&(this.bufferAttribute.count=this.bufferAttribute.array.length/this.bufferAttribute.itemSize),void(this.bufferAttribute.needsUpdate=!0);this.bufferAttribute=new THREE.BufferAttribute(this.typedArray.array,this.componentSize),this.bufferAttribute.usage=this.dynamicBuffer?THREE.DynamicDrawUsage:THREE.StaticDrawUsage},SPE.ShaderAttribute.prototype.getLength=function(){"use strict";return null===this.typedArray?0:this.typedArray.array.length},SPE.shaderChunks={defines:["#define PACKED_COLOR_SIZE 256.0","#define PACKED_COLOR_DIVISOR 255.0"].join("\n"),uniforms:["uniform float deltaTime;","uniform float runTime;","uniform sampler2D tex;","uniform vec4 textureAnimation;","uniform float scale;"].join("\n"),attributes:["attribute vec4 acceleration;","attribute vec3 velocity;","attribute vec4 rotation;","attribute vec3 rotationCenter;","attribute vec4 params;","attribute vec4 size;","attribute vec4 angle;","attribute vec4 color;","attribute vec4 opacity;"].join("\n"),varyings:["varying vec4 vColor;","#ifdef SHOULD_ROTATE_TEXTURE","    varying float vAngle;","#endif","#ifdef SHOULD_CALCULATE_SPRITE","    varying vec4 vSpriteSheet;","#endif"].join("\n"),branchAvoidanceFunctions:["float when_gt(float x, float y) {","    return max(sign(x - y), 0.0);","}","float when_lt(float x, float y) {","    return min( max(1.0 - sign(x - y), 0.0), 1.0 );","}","float when_eq( float x, float y ) {","    return 1.0 - abs( sign( x - y ) );","}","float when_ge(float x, float y) {","  return 1.0 - when_lt(x, y);","}","float when_le(float x, float y) {","  return 1.0 - when_gt(x, y);","}","float and(float a, float b) {","    return a * b;","}","float or(float a, float b) {","    return min(a + b, 1.0);","}"].join("\n"),unpackColor:["vec3 unpackColor( in float hex ) {","   vec3 c = vec3( 0.0 );","   float r = mod( (hex / PACKED_COLOR_SIZE / PACKED_COLOR_SIZE), PACKED_COLOR_SIZE );","   float g = mod( (hex / PACKED_COLOR_SIZE), PACKED_COLOR_SIZE );","   float b = mod( hex, PACKED_COLOR_SIZE );","   c.r = r / PACKED_COLOR_DIVISOR;","   c.g = g / PACKED_COLOR_DIVISOR;","   c.b = b / PACKED_COLOR_DIVISOR;","   return c;","}"].join("\n"),unpackRotationAxis:["vec3 unpackRotationAxis( in float hex ) {","   vec3 c = vec3( 0.0 );","   float r = mod( (hex / PACKED_COLOR_SIZE / PACKED_COLOR_SIZE), PACKED_COLOR_SIZE );","   float g = mod( (hex / PACKED_COLOR_SIZE), PACKED_COLOR_SIZE );","   float b = mod( hex, PACKED_COLOR_SIZE );","   c.r = r / PACKED_COLOR_DIVISOR;","   c.g = g / PACKED_COLOR_DIVISOR;","   c.b = b / PACKED_COLOR_DIVISOR;","   c *= vec3( 2.0 );","   c -= vec3( 1.0 );","   return c;","}"].join("\n"),floatOverLifetime:["float getFloatOverLifetime( in float positionInTime, in vec4 attr ) {","    highp float value = 0.0;","    float deltaAge = positionInTime * float( VALUE_OVER_LIFETIME_LENGTH - 1 );","    float fIndex = 0.0;","    float shouldApplyValue = 0.0;","    value += attr[ 0 ] * when_eq( deltaAge, 0.0 );","","    for( int i = 0; i < VALUE_OVER_LIFETIME_LENGTH - 1; ++i ) {","       fIndex = float( i );","       shouldApplyValue = and( when_gt( deltaAge, fIndex ), when_le( deltaAge, fIndex + 1.0 ) );","       value += shouldApplyValue * mix( attr[ i ], attr[ i + 1 ], deltaAge - fIndex );","    }","","    return value;","}"].join("\n"),colorOverLifetime:["vec3 getColorOverLifetime( in float positionInTime, in vec3 color1, in vec3 color2, in vec3 color3, in vec3 color4 ) {","    vec3 value = vec3( 0.0 );","    value.x = getFloatOverLifetime( positionInTime, vec4( color1.x, color2.x, color3.x, color4.x ) );","    value.y = getFloatOverLifetime( positionInTime, vec4( color1.y, color2.y, color3.y, color4.y ) );","    value.z = getFloatOverLifetime( positionInTime, vec4( color1.z, color2.z, color3.z, color4.z ) );","    return value;","}"].join("\n"),paramFetchingFunctions:["float getAlive() {","   return params.x;","}","float getAge() {","   return params.y;","}","float getMaxAge() {","   return params.z;","}","float getWiggle() {","   return params.w;","}"].join("\n"),forceFetchingFunctions:["vec4 getPosition( in float age ) {","   return modelViewMatrix * vec4( position, 1.0 );","}","vec3 getVelocity( in float age ) {","   return velocity * age;","}","vec3 getAcceleration( in float age ) {","   return acceleration.xyz * age;","}"].join("\n"),rotationFunctions:["#ifdef SHOULD_ROTATE_PARTICLES","   mat4 getRotationMatrix( in vec3 axis, in float angle) {","       axis = normalize(axis);","       float s = sin(angle);","       float c = cos(angle);","       float oc = 1.0 - c;","","       return mat4(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,  0.0,","                   oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,  0.0,","                   oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c,           0.0,","                   0.0,                                0.0,                                0.0,                                1.0);","   }","","   vec3 getRotation( in vec3 pos, in float positionInTime ) {","      if( rotation.y == 0.0 ) {","           return pos;","      }","","      vec3 axis = unpackRotationAxis( rotation.x );","      vec3 center = rotationCenter;","      vec3 translated;","      mat4 rotationMatrix;","      float angle = 0.0;","      angle += when_eq( rotation.z, 0.0 ) * rotation.y;","      angle += when_gt( rotation.z, 0.0 ) * mix( 0.0, rotation.y, positionInTime );","      translated = rotationCenter - pos;","      rotationMatrix = getRotationMatrix( axis, angle );","      return center - vec3( rotationMatrix * vec4( translated, 0.0 ) );","   }","#endif"].join("\n"),rotateTexture:["    vec2 vUv = vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y );","","    #ifdef SHOULD_ROTATE_TEXTURE","       float x = gl_PointCoord.x - 0.5;","       float y = 1.0 - gl_PointCoord.y - 0.5;","       float c = cos( -vAngle );","       float s = sin( -vAngle );","       vUv = vec2( c * x + s * y + 0.5, c * y - s * x + 0.5 );","    #endif","","    #ifdef SHOULD_CALCULATE_SPRITE","        float framesX = vSpriteSheet.x;","        float framesY = vSpriteSheet.y;","        float columnNorm = vSpriteSheet.z;","        float rowNorm = vSpriteSheet.w;","        vUv.x = gl_PointCoord.x * framesX + columnNorm;","        vUv.y = 1.0 - (gl_PointCoord.y * framesY + rowNorm);","    #endif","","    vec4 rotatedTexture = texture2D( tex, vUv );"].join("\n")},SPE.shaders={vertex:[SPE.shaderChunks.defines,SPE.shaderChunks.uniforms,SPE.shaderChunks.attributes,SPE.shaderChunks.varyings,SPE.shaderChunks.branchAvoidanceFunctions,SPE.shaderChunks.unpackColor,SPE.shaderChunks.unpackRotationAxis,SPE.shaderChunks.floatOverLifetime,SPE.shaderChunks.colorOverLifetime,SPE.shaderChunks.paramFetchingFunctions,SPE.shaderChunks.forceFetchingFunctions,SPE.shaderChunks.rotationFunctions,"void main() {","    highp float age = getAge();","    highp float alive = getAlive();","    highp float maxAge = getMaxAge();","    highp float positionInTime = (age / maxAge);","    highp float isAlive = when_gt( alive, 0.0 );","    #ifdef SHOULD_WIGGLE_PARTICLES","        float wiggleAmount = positionInTime * getWiggle();","        float wiggleSin = isAlive * sin( wiggleAmount );","        float wiggleCos = isAlive * cos( wiggleAmount );","    #endif","    vec3 vel = getVelocity( age );","    vec3 accel = getAcceleration( age );","    vec3 force = vec3( 0.0 );","    vec3 pos = vec3( position );","    float drag = 1.0 - (positionInTime * 0.5) * acceleration.w;","    force += vel;","    force *= drag;","    force += accel * age;","    pos += force;","    #ifdef SHOULD_WIGGLE_PARTICLES","        pos.x += wiggleSin;","        pos.y += wiggleCos;","        pos.z += wiggleSin;","    #endif","    #ifdef SHOULD_ROTATE_PARTICLES","        pos = getRotation( pos, positionInTime );","    #endif","    vec4 mvPosition = modelViewMatrix * vec4( pos, 1.0 );","    highp float pointSize = getFloatOverLifetime( positionInTime, size ) * isAlive;","    #ifdef HAS_PERSPECTIVE","        float perspective = scale / length( mvPosition.xyz );","    #else","        float perspective = 1.0;","    #endif","    float pointSizePerspective = pointSize * perspective;","    #ifdef COLORIZE","       vec3 c = isAlive * getColorOverLifetime(","           positionInTime,","           unpackColor( color.x ),","           unpackColor( color.y ),","           unpackColor( color.z ),","           unpackColor( color.w )","       );","    #else","       vec3 c = vec3(1.0);","    #endif","    float o = isAlive * getFloatOverLifetime( positionInTime, opacity );","    vColor = vec4( c, o );","    #ifdef SHOULD_ROTATE_TEXTURE","        vAngle = isAlive * getFloatOverLifetime( positionInTime, angle );","    #endif","    #ifdef SHOULD_CALCULATE_SPRITE","        float framesX = textureAnimation.x;","        float framesY = textureAnimation.y;","        float loopCount = textureAnimation.w;","        float totalFrames = textureAnimation.z;","        float frameNumber = mod( (positionInTime * loopCount) * totalFrames, totalFrames );","        float column = floor(mod( frameNumber, framesX ));","        float row = floor( (frameNumber - column) / framesX );","        float columnNorm = column / framesX;","        float rowNorm = row / framesY;","        vSpriteSheet.x = 1.0 / framesX;","        vSpriteSheet.y = 1.0 / framesY;","        vSpriteSheet.z = columnNorm;","        vSpriteSheet.w = rowNorm;","    #endif","    gl_PointSize = pointSizePerspective;","    gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragment:[SPE.shaderChunks.uniforms,SPE.shaderChunks.varyings,SPE.shaderChunks.branchAvoidanceFunctions,"void main() {","    vec3 outgoingLight = vColor.xyz;","    ","    #ifdef ALPHATEST","       if ( vColor.w < float(ALPHATEST) ) discard;","    #endif",SPE.shaderChunks.rotateTexture,"    outgoingLight = vColor.xyz * rotatedTexture.xyz;","    gl_FragColor = vec4( outgoingLight.xyz, rotatedTexture.w * vColor.w );","}"].join("\n")},SPE.utils={types:{BOOLEAN:"boolean",STRING:"string",NUMBER:"number",OBJECT:"object"},ensureTypedArg:function(t,e,r){"use strict";return typeof t===e?t:r},ensureArrayTypedArg:function(t,e,r){"use strict";if(Array.isArray(t)){for(var i=t.length-1;i>=0;--i)if(typeof t[i]!==e)return r;return t}return this.ensureTypedArg(t,e,r)},ensureInstanceOf:function(t,e,r){"use strict";return void 0!==e&&t instanceof e?t:r},ensureArrayInstanceOf:function(t,e,r){"use strict";if(Array.isArray(t)){for(var i=t.length-1;i>=0;--i)if(void 0!==e&&t[i]instanceof e==!1)return r;return t}return this.ensureInstanceOf(t,e,r)},ensureValueOverLifetimeCompliance:function(t,e,r){"use strict";e=e||3,r=r||3,!1===Array.isArray(t._value)&&(t._value=[t._value]),!1===Array.isArray(t._spread)&&(t._spread=[t._spread]);var i=this.clamp(t._value.length,e,r),a=this.clamp(t._spread.length,e,r),s=Math.max(i,a);t._value.length!==s&&(t._value=this.interpolateArray(t._value,s)),t._spread.length!==s&&(t._spread=this.interpolateArray(t._spread,s))},interpolateArray:function(t,e){"use strict";for(var r=t.length,i=["function"==typeof t[0].clone?t[0].clone():t[0]],a=(r-1)/(e-1),s=1;s<e-1;++s){var o=s*a,n=Math.floor(o),u=Math.ceil(o),l=o-n;i[s]=this.lerpTypeAgnostic(t[n],t[u],l)}return i.push("function"==typeof t[r-1].clone?t[r-1].clone():t[r-1]),i},clamp:function(t,e,r){"use strict";return Math.max(e,Math.min(t,r))},zeroToEpsilon:function(t,e){"use strict";var r=t;return r=e?1e-5*Math.random()*10:1e-5,t<0&&t>-1e-5&&(r=-r),r},lerpTypeAgnostic:function(t,e,r){"use strict";var i,a=this.types;return typeof t===a.NUMBER&&typeof e===a.NUMBER?t+(e-t)*r:t instanceof THREE.Vector2&&e instanceof THREE.Vector2?((i=t.clone()).x=this.lerp(t.x,e.x,r),i.y=this.lerp(t.y,e.y,r),i):t instanceof THREE.Vector3&&e instanceof THREE.Vector3?((i=t.clone()).x=this.lerp(t.x,e.x,r),i.y=this.lerp(t.y,e.y,r),i.z=this.lerp(t.z,e.z,r),i):t instanceof THREE.Vector4&&e instanceof THREE.Vector4?((i=t.clone()).x=this.lerp(t.x,e.x,r),i.y=this.lerp(t.y,e.y,r),i.z=this.lerp(t.z,e.z,r),i.w=this.lerp(t.w,e.w,r),i):t instanceof THREE.Color&&e instanceof THREE.Color?((i=t.clone()).r=this.lerp(t.r,e.r,r),i.g=this.lerp(t.g,e.g,r),i.b=this.lerp(t.b,e.b,r),i):void console.warn("Invalid argument types, or argument types do not match:",t,e)},lerp:function(t,e,r){"use strict";return t+(e-t)*r},roundToNearestMultiple:function(t,e){"use strict";var r;return 0===e?t:0===(r=Math.abs(t)%e)?t:t<0?-(Math.abs(t)-r):t+e-r},arrayValuesAreEqual:function(t){"use strict";for(var e=0;e<t.length-1;++e)if(t[e]!==t[e+1])return!1;return!0},randomFloat:function(t,e){"use strict";return t+e*(Math.random()-.5)},randomVector3:function(t,e,r,i,a){"use strict";var s=r.x+(Math.random()*i.x-.5*i.x),o=r.y+(Math.random()*i.y-.5*i.y),n=r.z+(Math.random()*i.z-.5*i.z);a&&(s=.5*-a.x+this.roundToNearestMultiple(s,a.x),o=.5*-a.y+this.roundToNearestMultiple(o,a.y),n=.5*-a.z+this.roundToNearestMultiple(n,a.z)),t.typedArray.setVec3Components(e,s,o,n)},randomColor:function(t,e,r,i){"use strict";var a=r.r+Math.random()*i.x,s=r.g+Math.random()*i.y,o=r.b+Math.random()*i.z;a=this.clamp(a,0,1),s=this.clamp(s,0,1),o=this.clamp(o,0,1),t.typedArray.setVec3Components(e,a,s,o)},randomColorAsHex:function(){"use strict";var t=new THREE.Color;return function(e,r,i,a){for(var s=i.length,o=[],n=0;n<s;++n){var u=a[n];t.copy(i[n]),t.r+=Math.random()*u.x-.5*u.x,t.g+=Math.random()*u.y-.5*u.y,t.b+=Math.random()*u.z-.5*u.z,t.r=this.clamp(t.r,0,1),t.g=this.clamp(t.g,0,1),t.b=this.clamp(t.b,0,1),o.push(t.getHex())}e.typedArray.setVec4Components(r,o[0],o[1],o[2],o[3])}}(),randomVector3OnLine:function(t,e,r,i){"use strict";var a=r.clone();a.lerp(i,Math.random()),t.typedArray.setVec3Components(e,a.x,a.y,a.z)},randomVector3OnSphere:function(t,e,r,i,a,s,o,n){"use strict";var u=2*Math.random()-1,l=6.2832*Math.random(),p=Math.sqrt(1-u*u),c=this.randomFloat(i,a),h=0,d=0,f=0;o&&(c=Math.round(c/o)*o),h=p*Math.cos(l)*c,d=p*Math.sin(l)*c,f=u*c,h*=s.x,d*=s.y,f*=s.z,h+=r.x,d+=r.y,f+=r.z,t.typedArray.setVec3Components(e,h,d,f)},seededRandom:function(t){var e=1e4*Math.sin(t);return e-(0|e)},randomVector3OnDisc:function(t,e,r,i,a,s,o){"use strict";var n=6.2832*Math.random(),u=Math.abs(this.randomFloat(i,a)),l=0,p=0,c=0;o&&(u=Math.round(u/o)*o),l=Math.cos(n)*u,p=Math.sin(n)*u,l*=s.x,p*=s.y,l+=r.x,p+=r.y,c+=r.z,t.typedArray.setVec3Components(e,l,p,c)},randomDirectionVector3OnSphere:function(){"use strict";var t=new THREE.Vector3;return function(e,r,i,a,s,o,n,u){t.copy(o),t.x-=i,t.y-=a,t.z-=s,t.normalize().multiplyScalar(-this.randomFloat(n,u)),e.typedArray.setVec3Components(r,t.x,t.y,t.z)}}(),randomDirectionVector3OnDisc:function(){"use strict";var t=new THREE.Vector3;return function(e,r,i,a,s,o,n,u){t.copy(o),t.x-=i,t.y-=a,t.z-=s,t.normalize().multiplyScalar(-this.randomFloat(n,u)),e.typedArray.setVec3Components(r,t.x,t.y,0)}}(),getPackedRotationAxis:function(){"use strict";var t=new THREE.Vector3,e=new THREE.Vector3,r=new THREE.Color,i=new THREE.Vector3(1,1,1);return function(a,s){return t.copy(a).normalize(),e.copy(s).normalize(),t.x+=.5*-s.x+Math.random()*s.x,t.y+=.5*-s.y+Math.random()*s.y,t.z+=.5*-s.z+Math.random()*s.z,t.normalize().add(i).multiplyScalar(.5),r.setRGB(t.x,t.y,t.z),r.getHex()}}()},SPE.Group=function(t){"use strict";var e=SPE.utils,r=e.types;(t=e.ensureTypedArg(t,r.OBJECT,{})).texture=e.ensureTypedArg(t.texture,r.OBJECT,{}),this.uuid=THREE.MathUtils.generateUUID(),this.fixedTimeStep=e.ensureTypedArg(t.fixedTimeStep,r.NUMBER,.016),this.texture=e.ensureInstanceOf(t.texture.value,THREE.Texture,null),this.textureFrames=e.ensureInstanceOf(t.texture.frames,THREE.Vector2,new THREE.Vector2(1,1)),this.textureFrameCount=e.ensureTypedArg(t.texture.frameCount,r.NUMBER,this.textureFrames.x*this.textureFrames.y),this.textureLoop=e.ensureTypedArg(t.texture.loop,r.NUMBER,1),this.textureFrames.max(new THREE.Vector2(1,1)),this.hasPerspective=e.ensureTypedArg(t.hasPerspective,r.BOOLEAN,!0),this.colorize=e.ensureTypedArg(t.colorize,r.BOOLEAN,!0),this.maxParticleCount=e.ensureTypedArg(t.maxParticleCount,r.NUMBER,null),this.blending=e.ensureTypedArg(t.blending,r.NUMBER,THREE.AdditiveBlending),this.transparent=e.ensureTypedArg(t.transparent,r.BOOLEAN,!0),this.alphaTest=parseFloat(e.ensureTypedArg(t.alphaTest,r.NUMBER,0)),this.depthWrite=e.ensureTypedArg(t.depthWrite,r.BOOLEAN,!1),this.depthTest=e.ensureTypedArg(t.depthTest,r.BOOLEAN,!0),this.fog=e.ensureTypedArg(t.fog,r.BOOLEAN,!0),this.scale=e.ensureTypedArg(t.scale,r.NUMBER,300),this.emitters=[],this.emitterIDs=[],this._pool=[],this._poolCreationSettings=null,this._createNewWhenPoolEmpty=0,this._attributesNeedRefresh=!1,this._attributesNeedDynamicReset=!1,this.particleCount=0,this.uniforms={tex:{type:"t",value:this.texture},textureAnimation:{type:"v4",value:new THREE.Vector4(this.textureFrames.x,this.textureFrames.y,this.textureFrameCount,Math.max(Math.abs(this.textureLoop),1))},fogColor:{type:"c",value:this.fog?new THREE.Color:null},fogNear:{type:"f",value:10},fogFar:{type:"f",value:200},fogDensity:{type:"f",value:.5},deltaTime:{type:"f",value:0},runTime:{type:"f",value:0},scale:{type:"f",value:this.scale}},this.defines={HAS_PERSPECTIVE:this.hasPerspective,COLORIZE:this.colorize,VALUE_OVER_LIFETIME_LENGTH:SPE.valueOverLifetimeLength,SHOULD_ROTATE_TEXTURE:!1,SHOULD_ROTATE_PARTICLES:!1,SHOULD_WIGGLE_PARTICLES:!1,SHOULD_CALCULATE_SPRITE:this.textureFrames.x>1||this.textureFrames.y>1},this.attributes={position:new SPE.ShaderAttribute("v3",!0),acceleration:new SPE.ShaderAttribute("v4",!0),velocity:new SPE.ShaderAttribute("v3",!0),rotation:new SPE.ShaderAttribute("v4",!0),rotationCenter:new SPE.ShaderAttribute("v3",!0),params:new SPE.ShaderAttribute("v4",!0),size:new SPE.ShaderAttribute("v4",!0),angle:new SPE.ShaderAttribute("v4",!0),color:new SPE.ShaderAttribute("v4",!0),opacity:new SPE.ShaderAttribute("v4",!0)},this.attributeKeys=Object.keys(this.attributes),this.attributeCount=this.attributeKeys.length,this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:SPE.shaders.vertex,fragmentShader:SPE.shaders.fragment,blending:this.blending,transparent:this.transparent,alphaTest:this.alphaTest,depthWrite:this.depthWrite,depthTest:this.depthTest,defines:this.defines,fog:this.fog}),this.geometry=new THREE.BufferGeometry,this.mesh=new THREE.Points(this.geometry,this.material),null===this.maxParticleCount&&console.warn("SPE.Group: No maxParticleCount specified. Adding emitters after rendering will probably cause errors.")},SPE.Group.constructor=SPE.Group,SPE.Group.prototype._updateDefines=function(){"use strict";for(var t,e=this.emitters,r=e.length-1,i=this.defines;r>=0;--r)t=e[r],i.SHOULD_CALCULATE_SPRITE||(i.SHOULD_ROTATE_TEXTURE=i.SHOULD_ROTATE_TEXTURE||!!Math.max(Math.max.apply(null,t.angle.value),Math.max.apply(null,t.angle.spread))),i.SHOULD_ROTATE_PARTICLES=i.SHOULD_ROTATE_PARTICLES||!!Math.max(t.rotation.angle,t.rotation.angleSpread),i.SHOULD_WIGGLE_PARTICLES=i.SHOULD_WIGGLE_PARTICLES||!!Math.max(t.wiggle.value,t.wiggle.spread);this.material.needsUpdate=!0},SPE.Group.prototype._applyAttributesToGeometry=function(){"use strict";var t,e,r=this.attributes,i=this.geometry,a=i.attributes;for(var s in r)r.hasOwnProperty(s)&&(t=r[s],(e=a[s])?e.array=t.typedArray.array:i.setAttribute(s,t.bufferAttribute),t.bufferAttribute.needsUpdate=!0);this.geometry.setDrawRange(0,this.particleCount)},SPE.Group.prototype.addEmitter=function(t){"use strict";if(t instanceof SPE.Emitter!=!1)if(this.emitterIDs.indexOf(t.uuid)>-1)console.error("Emitter already exists in this group. Will not add again.");else{if(null===t.group){var e=this.attributes,r=this.particleCount,i=r+t.particleCount;for(var a in this.particleCount=i,null!==this.maxParticleCount&&this.particleCount>this.maxParticleCount&&console.warn("SPE.Group: maxParticleCount exceeded. Requesting",this.particleCount,"particles, can support only",this.maxParticleCount),t._calculatePPSValue(t.maxAge._value+t.maxAge._spread),t._setBufferUpdateRanges(this.attributeKeys),t._setAttributeOffset(r),t.group=this,t.attributes=this.attributes,e)e.hasOwnProperty(a)&&e[a]._createBufferAttribute(null!==this.maxParticleCount?this.maxParticleCount:this.particleCount);for(var s=r;s<i;++s)t._assignPositionValue(s),t._assignForceValue(s,"velocity"),t._assignForceValue(s,"acceleration"),t._assignAbsLifetimeValue(s,"opacity"),t._assignAbsLifetimeValue(s,"size"),t._assignAngleValue(s),t._assignRotationValue(s),t._assignParamsValue(s),t._assignColorValue(s);return this._applyAttributesToGeometry(),this.emitters.push(t),this.emitterIDs.push(t.uuid),this._updateDefines(t),this.material.needsUpdate=!0,this.geometry.needsUpdate=!0,this._attributesNeedRefresh=!0,this}console.error("Emitter already belongs to another group. Will not add to requested group.")}else console.error("`emitter` argument must be instance of SPE.Emitter. Was provided with:",t)},SPE.Group.prototype.removeEmitter=function(t){"use strict";var e=this.emitterIDs.indexOf(t.uuid);if(t instanceof SPE.Emitter!=!1)if(-1!==e){for(var r=t.attributeOffset,i=r+t.particleCount,a=this.attributes.params.typedArray,s=r;s<i;++s)a.array[4*s]=0,a.array[4*s+1]=0;for(var o in this.emitters.splice(e,1),this.emitterIDs.splice(e,1),this.attributes)this.attributes.hasOwnProperty(o)&&this.attributes[o].splice(r,i);this.particleCount-=t.particleCount,t._onRemove(),this._attributesNeedRefresh=!0}else console.error("Emitter does not exist in this group. Will not remove.");else console.error("`emitter` argument must be instance of SPE.Emitter. Was provided with:",t)},SPE.Group.prototype.getFromPool=function(){"use strict";var t=this._pool,e=this._createNewWhenPoolEmpty;if(t.length)return t.pop();if(e){var r=new SPE.Emitter(this._poolCreationSettings);return this.addEmitter(r),r}return null},SPE.Group.prototype.releaseIntoPool=function(t){"use strict";if(t instanceof SPE.Emitter!=!1)return t.reset(),this._pool.unshift(t),this;console.error("Argument is not instanceof SPE.Emitter:",t)},SPE.Group.prototype.getPool=function(){"use strict";return this._pool},SPE.Group.prototype.addPool=function(t,e,r){"use strict";var i;this._poolCreationSettings=e,this._createNewWhenPoolEmpty=!!r;for(var a=0;a<t;++a)i=Array.isArray(e)?new SPE.Emitter(e[a]):new SPE.Emitter(e),this.addEmitter(i),this.releaseIntoPool(i);return this},SPE.Group.prototype._triggerSingleEmitter=function(t){"use strict";var e=this.getFromPool(),r=this;if(null!==e)return t instanceof THREE.Vector3&&(e.position.value.copy(t),e.position.value=e.position.value),e.enable(),setTimeout(function(){e.disable(),r.releaseIntoPool(e)},1e3*Math.max(e.duration,e.maxAge.value+e.maxAge.spread)),this;console.log("SPE.Group pool ran out.")},SPE.Group.prototype.triggerPoolEmitter=function(t,e){"use strict";if("number"==typeof t&&t>1)for(var r=0;r<t;++r)this._triggerSingleEmitter(e);else this._triggerSingleEmitter(e);return this},SPE.Group.prototype._updateUniforms=function(t){"use strict";this.uniforms.runTime.value+=t,this.uniforms.deltaTime.value=t},SPE.Group.prototype._resetBufferRanges=function(){"use strict";for(var t=this.attributeKeys,e=this.attributeCount-1,r=this.attributes;e>=0;--e)r[t[e]].resetUpdateRange()},SPE.Group.prototype._updateBuffers=function(t){"use strict";for(var e,r,i,a=this.attributeKeys,s=this.attributeCount-1,o=this.attributes,n=t.bufferUpdateRanges;s>=0;--s)r=n[e=a[s]],(i=o[e]).setUpdateRange(r.min,r.max),i.flagUpdate()},SPE.Group.prototype.tick=function(t){"use strict";var e=this.emitters,r=e.length,i=t||this.fixedTimeStep,a=this.attributeKeys,s=this.attributes;if(this._updateUniforms(i),this._resetBufferRanges(),0!==r||!1!==this._attributesNeedRefresh||!1!==this._attributesNeedDynamicReset){for(var o,n=0;n<r;++n)(o=e[n]).tick(i),this._updateBuffers(o);if(!0===this._attributesNeedDynamicReset){for(n=this.attributeCount-1;n>=0;--n)s[a[n]].resetDynamic();this._attributesNeedDynamicReset=!1}if(!0===this._attributesNeedRefresh){for(n=this.attributeCount-1;n>=0;--n)s[a[n]].forceUpdateAll();this._attributesNeedRefresh=!1,this._attributesNeedDynamicReset=!0}}},SPE.Group.prototype.dispose=function(){"use strict";return this.geometry.dispose(),this.material.dispose(),this},SPE.Emitter=function(t){"use strict";var e=SPE.utils,r=e.types,i=SPE.valueOverLifetimeLength;for(var a in(t=e.ensureTypedArg(t,r.OBJECT,{})).position=e.ensureTypedArg(t.position,r.OBJECT,{}),t.velocity=e.ensureTypedArg(t.velocity,r.OBJECT,{}),t.acceleration=e.ensureTypedArg(t.acceleration,r.OBJECT,{}),t.radius=e.ensureTypedArg(t.radius,r.OBJECT,{}),t.drag=e.ensureTypedArg(t.drag,r.OBJECT,{}),t.rotation=e.ensureTypedArg(t.rotation,r.OBJECT,{}),t.color=e.ensureTypedArg(t.color,r.OBJECT,{}),t.opacity=e.ensureTypedArg(t.opacity,r.OBJECT,{}),t.size=e.ensureTypedArg(t.size,r.OBJECT,{}),t.angle=e.ensureTypedArg(t.angle,r.OBJECT,{}),t.wiggle=e.ensureTypedArg(t.wiggle,r.OBJECT,{}),t.maxAge=e.ensureTypedArg(t.maxAge,r.OBJECT,{}),t.onParticleSpawn&&console.warn("onParticleSpawn has been removed. Please set properties directly to alter values at runtime."),this.uuid=THREE.MathUtils.generateUUID(),this.type=e.ensureTypedArg(t.type,r.NUMBER,SPE.distributions.BOX),this.position={_value:e.ensureInstanceOf(t.position.value,THREE.Vector3,new THREE.Vector3),_spread:e.ensureInstanceOf(t.position.spread,THREE.Vector3,new THREE.Vector3),_spreadClamp:e.ensureInstanceOf(t.position.spreadClamp,THREE.Vector3,new THREE.Vector3),_distribution:e.ensureTypedArg(t.position.distribution,r.NUMBER,this.type),_randomise:e.ensureTypedArg(t.position.randomise,r.BOOLEAN,!1),_radius:e.ensureTypedArg(t.position.radius,r.NUMBER,10),_radiusScale:e.ensureInstanceOf(t.position.radiusScale,THREE.Vector3,new THREE.Vector3(1,1,1)),_distributionClamp:e.ensureTypedArg(t.position.distributionClamp,r.NUMBER,0)},this.velocity={_value:e.ensureInstanceOf(t.velocity.value,THREE.Vector3,new THREE.Vector3),_spread:e.ensureInstanceOf(t.velocity.spread,THREE.Vector3,new THREE.Vector3),_distribution:e.ensureTypedArg(t.velocity.distribution,r.NUMBER,this.type),_randomise:e.ensureTypedArg(t.position.randomise,r.BOOLEAN,!1)},this.acceleration={_value:e.ensureInstanceOf(t.acceleration.value,THREE.Vector3,new THREE.Vector3),_spread:e.ensureInstanceOf(t.acceleration.spread,THREE.Vector3,new THREE.Vector3),_distribution:e.ensureTypedArg(t.acceleration.distribution,r.NUMBER,this.type),_randomise:e.ensureTypedArg(t.position.randomise,r.BOOLEAN,!1)},this.drag={_value:e.ensureTypedArg(t.drag.value,r.NUMBER,0),_spread:e.ensureTypedArg(t.drag.spread,r.NUMBER,0),_randomise:e.ensureTypedArg(t.position.randomise,r.BOOLEAN,!1)},this.wiggle={_value:e.ensureTypedArg(t.wiggle.value,r.NUMBER,0),_spread:e.ensureTypedArg(t.wiggle.spread,r.NUMBER,0)},this.rotation={_axis:e.ensureInstanceOf(t.rotation.axis,THREE.Vector3,new THREE.Vector3(0,1,0)),_axisSpread:e.ensureInstanceOf(t.rotation.axisSpread,THREE.Vector3,new THREE.Vector3),_angle:e.ensureTypedArg(t.rotation.angle,r.NUMBER,0),_angleSpread:e.ensureTypedArg(t.rotation.angleSpread,r.NUMBER,0),_static:e.ensureTypedArg(t.rotation.static,r.BOOLEAN,!1),_center:e.ensureInstanceOf(t.rotation.center,THREE.Vector3,this.position._value.clone()),_randomise:e.ensureTypedArg(t.position.randomise,r.BOOLEAN,!1)},this.maxAge={_value:e.ensureTypedArg(t.maxAge.value,r.NUMBER,2),_spread:e.ensureTypedArg(t.maxAge.spread,r.NUMBER,0)},this.color={_value:e.ensureArrayInstanceOf(t.color.value,THREE.Color,new THREE.Color),_spread:e.ensureArrayInstanceOf(t.color.spread,THREE.Vector3,new THREE.Vector3),_randomise:e.ensureTypedArg(t.position.randomise,r.BOOLEAN,!1)},this.opacity={_value:e.ensureArrayTypedArg(t.opacity.value,r.NUMBER,1),_spread:e.ensureArrayTypedArg(t.opacity.spread,r.NUMBER,0),_randomise:e.ensureTypedArg(t.position.randomise,r.BOOLEAN,!1)},this.size={_value:e.ensureArrayTypedArg(t.size.value,r.NUMBER,1),_spread:e.ensureArrayTypedArg(t.size.spread,r.NUMBER,0),_randomise:e.ensureTypedArg(t.position.randomise,r.BOOLEAN,!1)},this.angle={_value:e.ensureArrayTypedArg(t.angle.value,r.NUMBER,0),_spread:e.ensureArrayTypedArg(t.angle.spread,r.NUMBER,0),_randomise:e.ensureTypedArg(t.position.randomise,r.BOOLEAN,!1)},this.particleCount=e.ensureTypedArg(t.particleCount,r.NUMBER,100),this.duration=e.ensureTypedArg(t.duration,r.NUMBER,null),this.isStatic=e.ensureTypedArg(t.isStatic,r.BOOLEAN,!1),this.activeMultiplier=e.ensureTypedArg(t.activeMultiplier,r.NUMBER,1),this.direction=e.ensureTypedArg(t.direction,r.NUMBER,1),this.alive=e.ensureTypedArg(t.alive,r.BOOLEAN,!0),this.particlesPerSecond=0,this.activationIndex=0,this.attributeOffset=0,this.attributeEnd=0,this.age=0,this.activeParticleCount=0,this.group=null,this.attributes=null,this.paramsArray=null,this.resetFlags={position:e.ensureTypedArg(t.position.randomise,r.BOOLEAN,!1)||e.ensureTypedArg(t.radius.randomise,r.BOOLEAN,!1),velocity:e.ensureTypedArg(t.velocity.randomise,r.BOOLEAN,!1),acceleration:e.ensureTypedArg(t.acceleration.randomise,r.BOOLEAN,!1)||e.ensureTypedArg(t.drag.randomise,r.BOOLEAN,!1),rotation:e.ensureTypedArg(t.rotation.randomise,r.BOOLEAN,!1),rotationCenter:e.ensureTypedArg(t.rotation.randomise,r.BOOLEAN,!1),size:e.ensureTypedArg(t.size.randomise,r.BOOLEAN,!1),color:e.ensureTypedArg(t.color.randomise,r.BOOLEAN,!1),opacity:e.ensureTypedArg(t.opacity.randomise,r.BOOLEAN,!1),angle:e.ensureTypedArg(t.angle.randomise,r.BOOLEAN,!1)},this.updateFlags={},this.updateCounts={},this.updateMap={maxAge:"params",position:"position",velocity:"velocity",acceleration:"acceleration",drag:"acceleration",wiggle:"params",rotation:"rotation",size:"size",color:"color",opacity:"opacity",angle:"angle"},this.updateMap)this.updateMap.hasOwnProperty(a)&&(this.updateCounts[this.updateMap[a]]=0,this.updateFlags[this.updateMap[a]]=!1,this._createGetterSetters(this[a],a));this.bufferUpdateRanges={},this.attributeKeys=null,this.attributeCount=0,e.ensureValueOverLifetimeCompliance(this.color,i,i),e.ensureValueOverLifetimeCompliance(this.opacity,i,i),e.ensureValueOverLifetimeCompliance(this.size,i,i),e.ensureValueOverLifetimeCompliance(this.angle,i,i)},SPE.Emitter.constructor=SPE.Emitter,SPE.Emitter.prototype._createGetterSetters=function(t,e){"use strict";var r=this;for(var i in t)if(t.hasOwnProperty(i)){var a=i.replace("_","");Object.defineProperty(t,a,{get:function(t){return function(){return this[t]}}(i),set:function(t){return function(i){var a=r.updateMap[e],s=this[t],o=SPE.valueOverLifetimeLength;"_rotationCenter"===t?(r.updateFlags.rotationCenter=!0,r.updateCounts.rotationCenter=0):"_randomise"===t?r.resetFlags[a]=i:(r.updateFlags[a]=!0,r.updateCounts[a]=0),r.group._updateDefines(),this[t]=i,Array.isArray(s)&&SPE.utils.ensureValueOverLifetimeCompliance(r[e],o,o)}}(i)})}},SPE.Emitter.prototype._setBufferUpdateRanges=function(t){"use strict";this.attributeKeys=t,this.attributeCount=t.length;for(var e=this.attributeCount-1;e>=0;--e)this.bufferUpdateRanges[t[e]]={min:Number.POSITIVE_INFINITY,max:Number.NEGATIVE_INFINITY}},SPE.Emitter.prototype._calculatePPSValue=function(t){"use strict";var e=this.particleCount;this.duration?this.particlesPerSecond=e/(t<this.duration?t:this.duration):this.particlesPerSecond=e/t},SPE.Emitter.prototype._setAttributeOffset=function(t){this.attributeOffset=t,this.activationIndex=t,this.activationEnd=t+this.particleCount},SPE.Emitter.prototype._assignValue=function(t,e){"use strict";switch(t){case"position":this._assignPositionValue(e);break;case"velocity":case"acceleration":this._assignForceValue(e,t);break;case"size":case"opacity":this._assignAbsLifetimeValue(e,t);break;case"angle":this._assignAngleValue(e);break;case"params":this._assignParamsValue(e);break;case"rotation":this._assignRotationValue(e);break;case"color":this._assignColorValue(e)}},SPE.Emitter.prototype._assignPositionValue=function(t){"use strict";var e=SPE.distributions,r=SPE.utils,i=this.position,a=this.attributes.position,s=i._value,o=i._spread;switch(i._distribution){case e.BOX:r.randomVector3(a,t,s,o,i._spreadClamp);break;case e.SPHERE:r.randomVector3OnSphere(a,t,s,i._radius,i._spread.x,i._radiusScale,i._spreadClamp.x,i._distributionClamp||this.particleCount);break;case e.DISC:r.randomVector3OnDisc(a,t,s,i._radius,i._spread.x,i._radiusScale,i._spreadClamp.x);break;case e.LINE:r.randomVector3OnLine(a,t,s,o)}},SPE.Emitter.prototype._assignForceValue=function(t,e){"use strict";var r,i,a,s,o,n=SPE.distributions,u=SPE.utils,l=this[e],p=l._value,c=l._spread;switch(l._distribution){case n.BOX:u.randomVector3(this.attributes[e],t,p,c);break;case n.SPHERE:i=(r=this.attributes.position.typedArray.array)[o=3*t],a=r[o+1],s=r[o+2],u.randomDirectionVector3OnSphere(this.attributes[e],t,i,a,s,this.position._value,l._value.x,l._spread.x);break;case n.DISC:i=(r=this.attributes.position.typedArray.array)[o=3*t],a=r[o+1],s=r[o+2],u.randomDirectionVector3OnDisc(this.attributes[e],t,i,a,s,this.position._value,l._value.x,l._spread.x);break;case n.LINE:u.randomVector3OnLine(this.attributes[e],t,p,c)}if("acceleration"===e){var h=u.clamp(u.randomFloat(this.drag._value,this.drag._spread),0,1);this.attributes.acceleration.typedArray.array[4*t+3]=h}},SPE.Emitter.prototype._assignAbsLifetimeValue=function(t,e){"use strict";var r,i=this.attributes[e].typedArray,a=this[e],s=SPE.utils;s.arrayValuesAreEqual(a._value)&&s.arrayValuesAreEqual(a._spread)?(r=Math.abs(s.randomFloat(a._value[0],a._spread[0])),i.setVec4Components(t,r,r,r,r)):i.setVec4Components(t,Math.abs(s.randomFloat(a._value[0],a._spread[0])),Math.abs(s.randomFloat(a._value[1],a._spread[1])),Math.abs(s.randomFloat(a._value[2],a._spread[2])),Math.abs(s.randomFloat(a._value[3],a._spread[3])))},SPE.Emitter.prototype._assignAngleValue=function(t){"use strict";var e,r=this.attributes.angle.typedArray,i=this.angle,a=SPE.utils;a.arrayValuesAreEqual(i._value)&&a.arrayValuesAreEqual(i._spread)?(e=a.randomFloat(i._value[0],i._spread[0]),r.setVec4Components(t,e,e,e,e)):r.setVec4Components(t,a.randomFloat(i._value[0],i._spread[0]),a.randomFloat(i._value[1],i._spread[1]),a.randomFloat(i._value[2],i._spread[2]),a.randomFloat(i._value[3],i._spread[3]))},SPE.Emitter.prototype._assignParamsValue=function(t){"use strict";this.attributes.params.typedArray.setVec4Components(t,this.isStatic?1:0,0,Math.abs(SPE.utils.randomFloat(this.maxAge._value,this.maxAge._spread)),SPE.utils.randomFloat(this.wiggle._value,this.wiggle._spread))},SPE.Emitter.prototype._assignRotationValue=function(t){"use strict";this.attributes.rotation.typedArray.setVec3Components(t,SPE.utils.getPackedRotationAxis(this.rotation._axis,this.rotation._axisSpread),SPE.utils.randomFloat(this.rotation._angle,this.rotation._angleSpread),this.rotation._static?0:1),this.attributes.rotationCenter.typedArray.setVec3(t,this.rotation._center)},SPE.Emitter.prototype._assignColorValue=function(t){"use strict";SPE.utils.randomColorAsHex(this.attributes.color,t,this.color._value,this.color._spread)},SPE.Emitter.prototype._resetParticle=function(t){"use strict";for(var e,r,i=this.resetFlags,a=this.updateFlags,s=this.updateCounts,o=this.attributeKeys,n=this.attributeCount-1;n>=0;--n)r=a[e=o[n]],!0!==i[e]&&!0!==r||(this._assignValue(e,t),this._updateAttributeUpdateRange(e,t),!0===r&&s[e]===this.particleCount?(a[e]=!1,s[e]=0):1==r&&++s[e])},SPE.Emitter.prototype._updateAttributeUpdateRange=function(t,e){"use strict";var r=this.bufferUpdateRanges[t];r.min=Math.min(e,r.min),r.max=Math.max(e,r.max)},SPE.Emitter.prototype._resetBufferRanges=function(){"use strict";for(var t,e=this.bufferUpdateRanges,r=this.bufferUpdateKeys,i=this.bufferUpdateCount-1;i>=0;--i)e[t=r[i]].min=Number.POSITIVE_INFINITY,e[t].max=Number.NEGATIVE_INFINITY},SPE.Emitter.prototype._onRemove=function(){"use strict";this.particlesPerSecond=0,this.attributeOffset=0,this.activationIndex=0,this.activeParticleCount=0,this.group=null,this.attributes=null,this.paramsArray=null,this.age=0},SPE.Emitter.prototype._decrementParticleCount=function(){"use strict";--this.activeParticleCount},SPE.Emitter.prototype._incrementParticleCount=function(){"use strict";++this.activeParticleCount},SPE.Emitter.prototype._checkParticleAges=function(t,e,r,i){"use strict";for(var a,s,o,n,u=e-1;u>=t;--u)0!==(n=r[a=4*u])&&(o=r[a+1],s=r[a+2],1===this.direction?(o+=i)>=s&&(o=0,n=0,this._decrementParticleCount()):(o-=i)<=0&&(o=s,n=0,this._decrementParticleCount()),r[a]=n,r[a+1]=o,this._updateAttributeUpdateRange("params",u))},SPE.Emitter.prototype._activateParticles=function(t,e,r,i){"use strict";for(var a,s,o=this.direction,n=t;n<e;++n)0!=r[a=4*n]&&1!==this.particleCount||(this._incrementParticleCount(),r[a]=1,this._resetParticle(n),s=i*(n-t),r[a+1]=-1===o?r[a+2]-s:s,this._updateAttributeUpdateRange("params",n))},SPE.Emitter.prototype.tick=function(t){"use strict";if(!this.isStatic){null===this.paramsArray&&(this.paramsArray=this.attributes.params.typedArray.array);var e=this.attributeOffset,r=e+this.particleCount,i=this.paramsArray,a=this.particlesPerSecond*this.activeMultiplier*t,s=this.activationIndex;if(this._resetBufferRanges(),this._checkParticleAges(e,r,i,t),!1!==this.alive){if(null!==this.duration&&this.age>this.duration)return this.alive=!1,void(this.age=0);var o=1===this.particleCount?s:0|s,n=Math.min(o+a,this.activationEnd),u=n-this.activationIndex|0,l=u>0?t/u:0;this._activateParticles(o,n,i,l),this.activationIndex+=a,this.activationIndex>r&&(this.activationIndex=e),this.age+=t}else this.age=0}},SPE.Emitter.prototype.reset=function(t){"use strict";if(this.age=0,this.alive=!1,!0===t){for(var e,r=this.attributeOffset,i=r+this.particleCount,a=this.paramsArray,s=this.attributes.params.bufferAttribute,o=i-1;o>=r;--o)a[e=4*o]=0,a[e+1]=0;s.updateRange.offset=0,s.updateRange.count=-1,s.needsUpdate=!0}return this},SPE.Emitter.prototype.enable=function(){"use strict";return this.alive=!0,this},SPE.Emitter.prototype.disable=function(){"use strict";return this.alive=!1,this},SPE.Emitter.prototype.remove=function(){"use strict";return null!==this.group?this.group.removeEmitter(this):console.error("Emitter does not belong to a group, cannot remove."),this};